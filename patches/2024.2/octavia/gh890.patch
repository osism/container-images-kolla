--- a/octavia/common/clients.py
+++ b/octavia/common/clients.py
@@ -80,6 +80,12 @@ class NeutronAuth(object):
         if not cls.neutron_client:
             sess = ksession.get_session()
             kwargs = {'region_name': CONF.neutron.region_name}
+
+            if CONF.neutron.ca_certificates_file:
+                kwargs['cacert'] = CONF.neutron.ca_certificates_file
+            elif CONF.keystone_authtoken.cafile:
+                kwargs['cacert'] = CONF.keystone_authtoken.cafile
+
             # TODO(ricolin) `interface` option don't take list as option yet.
             # We can move away from this when openstacksdk no longer depends
             # on `interface`.
@@ -120,10 +126,21 @@ class NeutronAuth(object):
             neutron_endpoint = endpoint_data.catalog_url

         user_auth = token_endpoint.Token(neutron_endpoint, context.auth_token)
-        user_sess = session.Session(auth=user_auth)
+
+        if CONF.keystone_authtoken.cafile:
+            user_sess = session.Session(auth=user_auth, verify=CONF.keystone_authtoken.cafile)
+        else:
+            user_sess = session.Session(auth=user_auth)
+
+        kwargs = {}
+
+        if CONF.neutron.ca_certificates_file:
+            kwargs['cacert'] = CONF.neutron.ca_certificates_file
+        elif CONF.keystone_authtoken.cafile:
+            kwargs['cacert'] = CONF.keystone_authtoken.cafile

         conn = openstack.connection.Connection(
-            session=user_sess, oslo_conf=CONF)
+            session=user_sess, oslo_conf=CONF, **kwargs)
         return conn.network


