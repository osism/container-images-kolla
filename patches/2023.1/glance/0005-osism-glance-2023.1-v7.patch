From 1d8e2903f65922744d90f31f9c9680d487964313 Mon Sep 17 00:00:00 2001
From: Dan Smith <dansmith@redhat.com>
Date: Thu, 27 Jun 2024 09:33:55 -0700
Subject: [PATCH 5/7] Add QED format detection to format_inspector

This merely recognizes this format and always marks it as unsafe
because no service supports it. This prevents someone from uploading
one that we will ask qemu-img to inspect.

Change-Id: Ieea7b7eb0f380571bd4937cded920776e05f7ec4
(cherry picked from commit a7fd3246d57712267de6b8f1901bdd72fa0b1d03)
(cherry picked from commit 0c6c6a9bcb1497a8aad18f91732931d6abddd61c)
(cherry picked from commit 13f5861f01da177036d9b5da05944bc7c2057fab)
---
 glance/common/format_inspector.py              | 18 ++++++++++++++++++
 .../tests/unit/common/test_format_inspector.py |  6 ++++++
 2 files changed, 24 insertions(+)

diff --git a/glance/common/format_inspector.py b/glance/common/format_inspector.py
index a11ff1a5e..4d5e4fa45 100755
--- a/glance/common/format_inspector.py
+++ b/glance/common/format_inspector.py
@@ -366,6 +366,23 @@ class QcowInspector(FileInspector):
                 not self.has_unknown_features)
 
 
+class QEDInspector(FileInspector):
+    def __init__(self, tracing=False):
+        super().__init__(tracing)
+        self.new_region('header', CaptureRegion(0, 512))
+
+    @property
+    def format_match(self):
+        if not self.region('header').complete:
+            return False
+        return self.region('header').data.startswith(b'QED\x00')
+
+    def safety_check(self):
+        # QED format is not supported by anyone, but we want to detect it
+        # and mark it as just always unsafe.
+        return False
+
+
 # The VHD (or VPC as QEMU calls it) format consists of a big-endian
 # 512-byte "footer" at the beginning of the file with various
 # information, most of which does not matter to us:
@@ -879,6 +896,7 @@ def get_inspector(format_name):
         'vhdx': VHDXInspector,
         'vmdk': VMDKInspector,
         'vdi': VDIInspector,
+        'qed': QEDInspector,
     }
 
     return formats.get(format_name)
diff --git a/glance/tests/unit/common/test_format_inspector.py b/glance/tests/unit/common/test_format_inspector.py
index 9b458f970..9d4a7cb9e 100644
--- a/glance/tests/unit/common/test_format_inspector.py
+++ b/glance/tests/unit/common/test_format_inspector.py
@@ -179,6 +179,12 @@ class TestFormatInspectors(test_utils.BaseTestCase):
         # a local file.
         self.assertLess(fmt.actual_size, file_size)
 
+    def test_qed_always_unsafe(self):
+        img = self._create_img('qed', 10 * units.Mi)
+        fmt = format_inspector.get_inspector('qed').from_file(img)
+        self.assertTrue(fmt.format_match)
+        self.assertFalse(fmt.safety_check())
+
     def _test_vmdk_bad_descriptor_offset(self, subformat=None):
         format_name = 'vmdk'
         image_size = 10 * units.Mi
-- 
2.34.1


